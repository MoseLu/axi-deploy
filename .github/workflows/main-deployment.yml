name: Main Deployment

description: "主部署工作流 - 整个部署流程的入口点"



on:
  workflow_dispatch:
    inputs:
      project:
        description: '项目名称'
        required: true
        type: string
      source_repo:
        description: '源仓库 (格式: owner/repo)'
        required: true
        type: string
      run_id:
        description: '构建运行ID'
        required: true
        type: string
      deploy_type:
        description: '部署类型'
        required: true
        default: 'static'
        type: choice
        options:
          - static
          - backend
      nginx_config:
        description: 'Nginx配置（可选）'
        required: false
        type: string
      test_url:
        description: '测试URL（可选）'
        required: false
        type: string
      start_cmd:
        description: '启动命令（后端项目）'
        required: false
        type: string
      deploy_secrets:
        description: '部署密钥 (JSON格式或base64编码的JSON: {"SERVER_HOST":"host","SERVER_PORT":"port","SERVER_USER":"user","SERVER_KEY":"key","DEPLOY_CENTER_PAT":"pat"})，DEPLOY_CENTER_PAT可选，默认使用内置Token'
        required: true
        type: string
      service_port:
        description: '服务端口（可选，默认从配置文件获取）'
        required: false
        type: string
        default: ""
      skip_init:
        description: '跳过服务器初始化步骤'
        required: false
        type: boolean
        default: false

jobs:
  # 步骤1: 验证构建产物可用性
  validate-artifact:
    uses: MoseLu/axi-deploy/.github/workflows/validate-artifact.yml@master
    with:
      # 项目名称
      project: ${{ inputs.project }}
      # 源仓库 (格式: owner/repo)
      source_repo: ${{ inputs.source_repo }}
      # 部署密钥 (JSON格式或base64编码的JSON)
      deploy_secrets: ${{ inputs.deploy_secrets }}

  # 步骤2: 解析部署密钥
  parse-secrets:
    needs: [validate-artifact]
    uses: MoseLu/axi-deploy/.github/workflows/parse-secrets.yml@master
    with:
      # 部署密钥 (JSON格式或base64编码的JSON)
      deploy_secrets: ${{ inputs.deploy_secrets }}

  # 步骤3: 服务器初始化（可选，使用可复用工作流）
  server-init:
    needs: [parse-secrets, validate-artifact]
    if: ${{ inputs.skip_init != 'true' }}
    uses: MoseLu/axi-deploy/.github/workflows/server-init.yml@master
    with:
      # 服务器配置
      server_host: ${{ needs.parse-secrets.outputs.server_host }}
      server_user: ${{ needs.parse-secrets.outputs.server_user }}
      server_key: ${{ needs.parse-secrets.outputs.server_key }}
      server_port: ${{ needs.parse-secrets.outputs.server_port }}


  # 步骤4: 部署项目
  deploy-project:
    needs: [parse-secrets, validate-artifact]
    uses: MoseLu/axi-deploy/.github/workflows/deploy-project.yml@master
    with:
      # 项目名称
      project: ${{ inputs.project }}
      # 源仓库 (格式: owner/repo)
      source_repo: ${{ inputs.source_repo }}
      # 构建运行ID
      run_id: ${{ needs.validate-artifact.outputs.run_id }}
      # 部署类型 (backend/static)
      deploy_type: ${{ inputs.deploy_type }}
      # 服务器配置
      server_host: ${{ needs.parse-secrets.outputs.server_host }}
      server_user: ${{ needs.parse-secrets.outputs.server_user }}
      server_key: ${{ needs.parse-secrets.outputs.server_key }}
      server_port: ${{ needs.parse-secrets.outputs.server_port }}
      # GitHub Token (可选)
      deploy_center_pat: ${{ needs.parse-secrets.outputs.deploy_center_pat || '' }}

  # 步骤5: 配置Nginx（可选）
  configure-nginx:
    needs: [parse-secrets, deploy-project]
    if: ${{ inputs.nginx_config != '' }}
    uses: MoseLu/axi-deploy/.github/workflows/configure-nginx.yml@master
    with:
      # 项目名称
      project: ${{ inputs.project }}
      # 服务器配置
      server_host: ${{ needs.parse-secrets.outputs.server_host }}
      server_user: ${{ needs.parse-secrets.outputs.server_user }}
      server_key: ${{ needs.parse-secrets.outputs.server_key }}
      server_port: ${{ needs.parse-secrets.outputs.server_port }}
      # 部署类型
      deploy_type: ${{ inputs.deploy_type }}
      # Nginx配置
      nginx_config: ${{ inputs.nginx_config }}

  # 步骤6: 启动服务（可选，仅后端项目）
  start-service:
    needs: [parse-secrets, deploy-project, configure-nginx]
    if: ${{ inputs.start_cmd != '' && inputs.deploy_type == 'backend' }}
    uses: MoseLu/axi-deploy/.github/workflows/start-service.yml@master
    with:
      # 项目名称
      project: ${{ inputs.project }}
      # 启动命令
      start_cmd: ${{ inputs.start_cmd }}
      # 部署类型
      deploy_type: ${{ inputs.deploy_type }}
      # 服务端口（从配置文件获取）
      service_port: ${{ inputs.service_port || '' }}
      # 服务器配置
      server_host: ${{ needs.parse-secrets.outputs.server_host }}
      server_user: ${{ needs.parse-secrets.outputs.server_user }}
      server_key: ${{ needs.parse-secrets.outputs.server_key }}
      server_port: ${{ needs.parse-secrets.outputs.server_port }}

  # 步骤7: 测试网站 - 静态项目（可选）
  test-website-static:
    needs: [parse-secrets, deploy-project, configure-nginx]
    if: ${{ inputs.test_url != '' && inputs.deploy_type == 'static' }}
    uses: MoseLu/axi-deploy/.github/workflows/test-website.yml@master
    with:
      # 项目名称
      project: ${{ inputs.project }}
      # 测试URL
      test_url: ${{ inputs.test_url }}
      # 部署类型
      deploy_type: ${{ inputs.deploy_type }}
      # 服务器配置
      server_host: ${{ needs.parse-secrets.outputs.server_host }}
      server_user: ${{ needs.parse-secrets.outputs.server_user }}
      server_key: ${{ needs.parse-secrets.outputs.server_key }}
      server_port: ${{ needs.parse-secrets.outputs.server_port }}
      # 部署路径配置
      apps_root: "/srv/apps"
      static_root: "/srv/static"
      nginx_conf_dir: "/www/server/nginx/conf/conf.d/redamancy"

  # 步骤8: 测试网站 - 后端项目（可选）
  test-website-backend:
    needs: [parse-secrets, deploy-project, configure-nginx, start-service]
    if: ${{ inputs.test_url != '' && inputs.deploy_type == 'backend' }}
    uses: MoseLu/axi-deploy/.github/workflows/test-website.yml@master
    with:
      # 项目名称
      project: ${{ inputs.project }}
      # 测试URL
      test_url: ${{ inputs.test_url }}
      # 部署类型
      deploy_type: ${{ inputs.deploy_type }}
      # 服务器配置
      server_host: ${{ needs.parse-secrets.outputs.server_host }}
      server_user: ${{ needs.parse-secrets.outputs.server_user }}
      server_key: ${{ needs.parse-secrets.outputs.server_key }}
      server_port: ${{ needs.parse-secrets.outputs.server_port }}
      # 部署路径配置
      apps_root: "/srv/apps"
      static_root: "/srv/static"
      nginx_conf_dir: "/www/server/nginx/conf/conf.d/redamancy"

  # 步骤9: 部署完成总结
  deployment-summary:
    needs: [parse-secrets, server-init, validate-artifact, deploy-project, configure-nginx, start-service, test-website-static, test-website-backend]
    if: always()
    uses: MoseLu/axi-deploy/.github/workflows/deployment-summary.yml@master
    with:
      # 项目信息
      project: ${{ inputs.project }}
      deploy_type: ${{ inputs.deploy_type }}
      source_repo: ${{ inputs.source_repo }}
      run_id: ${{ inputs.run_id }}
      # 测试信息
      test_url: ${{ inputs.test_url }}
      # 部署路径
      deploy_path: ${{ needs.deploy-project.outputs.deploy_path || '' }}
      # 各步骤执行结果
      parse_secrets_result: ${{ needs.parse-secrets.result }}
      server_init_result: ${{ needs.server-init.result || '' }}
      validate_artifact_result: ${{ needs.validate-artifact.result }}
      deploy_project_result: ${{ needs.deploy-project.result }}
      configure_nginx_result: ${{ needs.configure-nginx.result || '' }}
      start_service_result: ${{ needs.start-service.result || '' }}
      test_website_static_result: ${{ needs.test-website-static.result || '' }}
      test_website_backend_result: ${{ needs.test-website-backend.result || '' }}