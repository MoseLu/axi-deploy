name: Deployment Orchestrator

description: "部署流程编排器 - 协调整个部署流程"

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
        description: "项目名称"
      source_repo:
        required: true
        type: string
        description: "源仓库 (owner/repo)"
      run_id:
        required: true
        type: string
        description: "构建运行ID"
      deploy_type:
        required: true
        type: string
        description: "部署类型 (backend/static)"
        default: "static"
      nginx_config:
        required: false
        type: string
        description: "Nginx配置"
        default: ""
      test_url:
        required: false
        type: string
        description: "测试URL"
        default: ""
      start_cmd:
        required: false
        type: string
        description: "启动命令"
        default: ""
      domain:
        required: false
        type: string
        description: "域名"
        default: "redamancy.com.cn"
      apps_root:
        required: false
        type: string
        description: "应用目录路径"
        default: "/srv/apps"
      static_root:
        required: false
        type: string
        description: "静态文件目录路径"
        default: "/srv/static"
      backup_root:
        required: false
        type: string
        description: "备份根目录"
        default: "/srv/backups"
      run_user:
        required: false
        type: string
        description: "运行用户"
        default: "deploy"
      nginx_conf_dir:
        required: false
        type: string
        description: "Nginx配置目录"
        default: "/www/server/nginx/conf/conf.d/redamancy"
      backend_port:
        required: false
        type: string
        description: "后端服务端口"
        default: "8080"
      service_name:
        required: false
        type: string
        description: "服务名称"
        default: "star-cloud"
      github_token:
        required: false
        type: string
        description: "GitHub Token"
      server_host:
        required: false
        type: string
        description: "服务器地址"
      server_user:
        required: false
        type: string
        description: "服务器用户"
      server_key:
        required: false
        type: string
        description: "服务器密钥"
      server_port:
        required: false
        type: string
        description: "服务器端口"
      deploy_center_pat:
        required: true
        type: string
        description: "GitHub Token (用于下载构建产物)"

jobs:
  download-artifact:
    uses: MoseLu/axi-deploy/.github/workflows/download-artifact.yml@master
    with:
      project: ${{ inputs.project }}
      source_repo: ${{ inputs.source_repo }}
      run_id: ${{ inputs.run_id }}
      github_token: ${{ inputs.deploy_center_pat }}

  upload-files:
    needs: download-artifact
    uses: MoseLu/axi-deploy/.github/workflows/upload-files.yml@master
    with:
      project: ${{ inputs.project }}
      server_host: ${{ inputs.server_host }}
      server_user: ${{ inputs.server_user }}
      server_key: ${{ inputs.server_key }}
      server_port: ${{ inputs.server_port }}
      artifact_path: ${{ needs.download-artifact.outputs.artifact_path }}
      run_user: ${{ inputs.run_user }}

  deploy-project:
    needs: upload-files
    uses: MoseLu/axi-deploy/.github/workflows/deploy-project.yml@master
    with:
      project: ${{ inputs.project }}
      deploy_type: ${{ inputs.deploy_type }}
      server_host: ${{ inputs.server_host }}
      server_user: ${{ inputs.server_user }}
      server_key: ${{ inputs.server_key }}
      server_port: ${{ inputs.server_port }}
      apps_root: ${{ inputs.apps_root }}
      static_root: ${{ inputs.static_root }}
      backup_root: ${{ inputs.backup_root }}
      run_user: ${{ inputs.run_user }}

  configure-nginx:
    needs: deploy-project
    if: ${{ inputs.nginx_config != '' }}
    uses: MoseLu/axi-deploy/.github/workflows/configure-nginx.yml@master
    with:
      project: ${{ inputs.project }}
      nginx_config: ${{ inputs.nginx_config }}
      server_host: ${{ inputs.server_host }}
      server_user: ${{ inputs.server_user }}
      server_key: ${{ inputs.server_key }}
      server_port: ${{ inputs.server_port }}
      domain: ${{ inputs.domain }}
      nginx_conf_dir: ${{ inputs.nginx_conf_dir }}
      apps_root: ${{ inputs.apps_root }}
      static_root: ${{ inputs.static_root }}
      backend_port: ${{ inputs.backend_port }}
      service_name: ${{ inputs.service_name }}
      deploy_type: ${{ inputs.deploy_type }}

  start-service:
    needs: [deploy-project, configure-nginx]
    if: ${{ inputs.start_cmd != '' && inputs.deploy_type == 'backend' }}
    uses: MoseLu/axi-deploy/.github/workflows/start-service.yml@master
    with:
      project: ${{ inputs.project }}
      start_cmd: ${{ inputs.start_cmd }}
      deploy_type: ${{ inputs.deploy_type }}
      server_host: ${{ inputs.server_host }}
      server_user: ${{ inputs.server_user }}
      server_key: ${{ inputs.server_key }}
      server_port: ${{ inputs.server_port }}
      apps_root: ${{ inputs.apps_root }}

  test-website:
    needs: [deploy-project, configure-nginx, start-service]
    if: ${{ inputs.test_url != '' }}
    uses: MoseLu/axi-deploy/.github/workflows/test-website.yml@master
    with:
      project: ${{ inputs.project }}
      test_url: ${{ inputs.test_url }}
      deploy_type: ${{ inputs.deploy_type }}
      server_host: ${{ inputs.server_host }}
      server_user: ${{ inputs.server_user }}
      server_key: ${{ inputs.server_key }}
      server_port: ${{ inputs.server_port }}
      apps_root: ${{ inputs.apps_root }}
      static_root: ${{ inputs.static_root }}
      nginx_conf_dir: ${{ inputs.nginx_conf_dir }}

  deployment-summary:
    needs: [download-artifact, upload-files, deploy-project, configure-nginx, start-service, test-website]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: 部署完成总结
        run: |
          echo "🎉 部署流程完成"
          echo "=========================================="
          echo "📋 部署信息:"
          echo "- 项目: ${{ inputs.project }}"
          echo "- 部署类型: ${{ inputs.deploy_type }}"
          echo "- 源仓库: ${{ inputs.source_repo }}"
          echo "- 构建ID: ${{ inputs.run_id }}"
          echo ""
          echo "📊 执行状态:"
          echo "- 下载构建产物: ${{ needs.download-artifact.result }}"
          echo "- 上传文件: ${{ needs.upload-files.result }}"
          echo "- 部署项目: ${{ needs.deploy-project.result }}"
          echo "- 配置Nginx: ${{ needs.configure-nginx.result || 'skipped' }}"
          echo "- 启动服务: ${{ needs.start-service.result || 'skipped' }}"
          echo "- 网站测试: ${{ needs.test-website.result || 'skipped' }}"
          echo ""
          echo "🔗 访问信息:"
          echo "- 域名: ${{ inputs.domain }}"
          echo "- 项目路径: ${{ inputs.apps_root }}/${{ inputs.project }}"
          if [ "${{ inputs.test_url }}" != "" ]; then
            echo "- 测试URL: ${{ inputs.test_url }}"
          fi
          echo "=========================================="
