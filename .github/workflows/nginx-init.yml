name: Nginx 服务器初始化

on:
  workflow_dispatch:
    inputs:
      server_host:
        description: '服务器IP地址'
        required: true
        default: 'your-server-ip'
      server_user:
        description: 'SSH用户名'
        required: true
        default: 'root'
      domain:
        description: '域名'
        required: true
        default: 'redamancy.com.cn'
      run_user:
        description: '业务运行用户'
        required: true
        default: 'deploy'
      nginx_conf_dir:
        description: 'Nginx片段目录'
        required: true
        default: '/www/server/nginx/conf/conf.d/redamancy'
      apps_root:
        description: '二进制根目录'
        required: true
        default: '/srv/apps'
      static_root:
        description: '静态文件根目录'
        required: true
        default: '/srv/static'
      cert_src:
        description: '证书源目录（宝塔）'
        required: true
        default: '/www/server/panel/vhost/cert/redamancy.com.cn'
      cert_dst:
        description: '证书使用目录'
        required: true
        default: '/www/server/nginx/ssl/redamancy'

jobs:
  nginx-init:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 前置检查
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "🔍 开始Nginx服务器初始化..."
            echo "📋 前置检查..."
            
            # 检查Nginx是否安装
            if command -v nginx &> /dev/null; then
              echo "✅ Nginx已安装: $(nginx -v)"
            else
              echo "❌ Nginx未安装，请先安装Nginx"
              exit 1
            fi
            
            # 检查Nginx服务状态
            if systemctl is-active --quiet nginx; then
              echo "✅ Nginx服务正在运行"
            else
              echo "⚠️  Nginx服务未运行，尝试启动..."
              systemctl start nginx
            fi
            
            echo "✅ 前置检查完成"

      - name: 创建业务运行用户
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "👤 创建业务运行用户..."
            
            # 检查用户是否已存在
            if id "${{ inputs.run_user }}" &>/dev/null; then
              echo "✅ 用户 ${{ inputs.run_user }} 已存在"
            else
              echo "🆕 创建用户 ${{ inputs.run_user }}..."
              sudo useradd -m -s /bin/bash ${{ inputs.run_user }}
              echo "✅ 用户 ${{ inputs.run_user }} 创建完成"
            fi
            
            # 显示用户信息
            id ${{ inputs.run_user }}

      - name: 创建所需目录
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "📁 创建所需目录..."
            
            # 创建目录
            sudo mkdir -p \
              ${{ inputs.apps_root }} \
              ${{ inputs.static_root }} \
              ${{ inputs.nginx_conf_dir }} \
              ${{ inputs.cert_dst }}
            
            # 设置权限
            sudo chown ${{ inputs.run_user }}:${{ inputs.run_user }} ${{ inputs.apps_root }} ${{ inputs.static_root }}
            sudo chmod 755 ${{ inputs.nginx_conf_dir }} ${{ inputs.cert_dst }}
            
            echo "✅ 目录创建完成:"
            ls -la ${{ inputs.apps_root }}
            ls -la ${{ inputs.static_root }}
            ls -la ${{ inputs.nginx_conf_dir }}

      - name: 软链宝塔证书
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "🔗 软链宝塔证书..."
            
            DOMAIN=${{ inputs.domain }}
            CERT_SRC=${{ inputs.cert_src }}
            CERT_DST=${{ inputs.cert_dst }}
            
            # 检查证书源目录是否存在
            if [ ! -d "$CERT_SRC" ]; then
              echo "❌ 证书源目录不存在: $CERT_SRC"
              echo "请确保宝塔面板已为域名 $DOMAIN 配置SSL证书"
              exit 1
            fi
            
            # 创建目标目录
            sudo mkdir -p $CERT_DST
            
            # 软链证书文件
            if [ -f "$CERT_SRC/fullchain.pem" ]; then
              sudo ln -sf $CERT_SRC/fullchain.pem $CERT_DST/fullchain.pem
              echo "✅ 软链 fullchain.pem 完成"
            else
              echo "❌ 证书文件不存在: $CERT_SRC/fullchain.pem"
              exit 1
            fi
            
            if [ -f "$CERT_SRC/privkey.pem" ]; then
              sudo ln -sf $CERT_SRC/privkey.pem $CERT_DST/privkey.pem
              echo "✅ 软链 privkey.pem 完成"
            else
              echo "❌ 私钥文件不存在: $CERT_SRC/privkey.pem"
              exit 1
            fi
            
            echo "✅ 证书软链完成: $CERT_DST → $CERT_SRC"
            ls -la $CERT_DST/

      - name: 写入固定主配置
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "📝 写入固定主配置..."
            
            MAIN=${{ inputs.nginx_conf_dir }}/00-main.conf
            
            sudo tee $MAIN <<'EOF'
            server {
                listen 443 ssl http2;
                server_name ${{ inputs.domain }};
            
                ssl_certificate     ${{ inputs.cert_dst }}/fullchain.pem;
                ssl_certificate_key ${{ inputs.cert_dst }}/privkey.pem;
            
                client_max_body_size 100m;
            
                # 这里自动加载 route-*.conf（项目路由）——主配置永远不用再改
                include ${{ inputs.nginx_conf_dir }}/route-*.conf;
            }
            
            server {
                listen 80;
                server_name ${{ inputs.domain }};
                return 301 https://$host$request_uri;
            }
            EOF
            
            echo "✅ 写入 00-main.conf 完成"
            cat $MAIN

      - name: 检查并重载Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "🔄 检查并重载Nginx..."
            
            # 检查Nginx配置语法
            if sudo nginx -t; then
              echo "✅ Nginx配置语法检查通过"
            else
              echo "❌ Nginx配置语法错误"
              exit 1
            fi
            
            # 重载Nginx配置
            if sudo systemctl reload nginx; then
              echo "✅ Nginx热加载完成"
            else
              echo "❌ Nginx重载失败"
              exit 1
            fi

      - name: 防火墙检查
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "🔥 防火墙规则检查..."
            
            # 检查firewalld
            if command -v firewall-cmd &> /dev/null; then
              echo "检测到 firewalld，检查HTTP/HTTPS端口..."
              if sudo firewall-cmd --list-services | grep -q http; then
                echo "✅ HTTP端口已开放"
              else
                echo "⚠️  HTTP端口未开放，尝试开放..."
                sudo firewall-cmd --add-service=http --permanent
                sudo firewall-cmd --add-service=https --permanent
                sudo firewall-cmd --reload
                echo "✅ HTTP/HTTPS端口已开放"
              fi
            else
              echo "未检测到 firewalld，跳过防火墙配置"
            fi
            
            echo "✅ 防火墙检查完成"

      - name: 结果验证
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "🔍 结果验证..."
            
            # 检查配置文件
            echo "📁 检查配置文件:"
            ls -la ${{ inputs.nginx_conf_dir }}/
            
            # 检查证书软链
            echo "🔗 检查证书软链:"
            ls -la ${{ inputs.cert_dst }}/
            
            # 检查目录权限
            echo "📂 检查目录权限:"
            ls -la ${{ inputs.apps_root }}/
            ls -la ${{ inputs.static_root }}/
            
            # 测试HTTPS访问
            echo "🌐 测试HTTPS访问:"
            curl -I https://${{ inputs.domain }} || echo "⚠️  HTTPS访问测试失败（可能尚未部署项目）"
            
            echo "✅ 初始化完成！"
            echo ""
            echo "📋 初始化摘要:"
            echo "- 域名: ${{ inputs.domain }}"
            echo "- 运行用户: ${{ inputs.run_user }}"
            echo "- 应用目录: ${{ inputs.apps_root }}"
            echo "- 静态文件目录: ${{ inputs.static_root }}"
            echo "- Nginx配置目录: ${{ inputs.nginx_conf_dir }}"
            echo "- 证书目录: ${{ inputs.cert_dst }}"
            echo ""
            echo "🎉 服务器已准备就绪，可以开始部署项目！" 