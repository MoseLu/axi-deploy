name: Diagnose 502 Error

on:
  workflow_dispatch:
    inputs:
      project:
        description: '项目名称'
        required: true
        default: 'axi-project-dashboard'
      server_host:
        description: '服务器地址'
        required: true
        default: 'redamancy.com.cn'
      server_user:
        description: '服务器用户'
        required: true
        default: 'deploy'
      server_key:
        description: 'SSH私钥'
        required: true
      server_port:
        description: 'SSH端口'
        required: true
        default: '22'

jobs:
  diagnose:
    runs-on: ubuntu-latest
    steps:
      - name: 诊断502错误
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ inputs.server_key }}
          port: ${{ inputs.server_port }}
          script: |
            echo "🔍 开始诊断502错误..."
            echo "项目: ${{ inputs.project }}"
            echo "时间: $(date)"
            echo "=========================================="
            
            # 1. 检查系统基本信息
            echo "📋 系统基本信息:"
            echo "- 主机名: $(hostname)"
            echo "- 系统版本: $(cat /etc/os-release | grep PRETTY_NAME)"
            echo "- 内核版本: $(uname -r)"
            echo "- 当前用户: $(whoami)"
            echo "- 当前目录: $(pwd)"
            echo ""
            
            # 2. 检查网络连接
            echo "🌐 网络连接检查:"
            echo "- 本地回环: $(ping -c 1 127.0.0.1 >/dev/null 2>&1 && echo '✅' || echo '❌')"
            echo "- 外网连接: $(ping -c 1 8.8.8.8 >/dev/null 2>&1 && echo '✅' || echo '❌')"
            echo "- 域名解析: $(nslookup redamancy.com.cn >/dev/null 2>&1 && echo '✅' || echo '❌')"
            echo ""
            
            # 3. 检查端口占用
            echo "🔌 端口占用检查:"
            echo "- 端口80: $(netstat -tlnp | grep :80 | head -1 || echo '未占用')"
            echo "- 端口443: $(netstat -tlnp | grep :443 | head -1 || echo '未占用')"
            echo "- 端口8090: $(netstat -tlnp | grep :8090 | head -1 || echo '未占用')"
            echo "- 端口8080: $(netstat -tlnp | grep :8080 | head -1 || echo '未占用')"
            echo ""
            
            # 4. 检查Nginx状态
            echo "🌐 Nginx状态检查:"
            echo "- Nginx进程: $(pgrep nginx | wc -l) 个进程"
            echo "- Nginx服务状态:"
            systemctl status nginx --no-pager -l || echo "无法获取Nginx状态"
            echo ""
            
            # 5. 检查Nginx配置
            echo "📝 Nginx配置检查:"
            echo "- 配置语法: $(nginx -t 2>&1 | tail -1)"
            echo "- 主配置文件: /etc/nginx/nginx.conf"
            echo "- 站点配置目录: /www/server/nginx/conf/conf.d/redamancy/"
            echo ""
            
            # 6. 检查项目配置
            echo "📁 项目配置检查:"
            PROJECT="${{ inputs.project }}"
            NGINX_CONF_DIR="/www/server/nginx/conf/conf.d/redamancy"
            ROUTE_CONF="$NGINX_CONF_DIR/route-$PROJECT.conf"
            
            echo "- 项目配置目录: $NGINX_CONF_DIR"
            echo "- 项目配置文件: $ROUTE_CONF"
            
            if [ -f "$ROUTE_CONF" ]; then
              echo "✅ 项目配置文件存在"
              echo "配置文件内容:"
              cat "$ROUTE_CONF"
            else
              echo "❌ 项目配置文件不存在"
            fi
            echo ""
            
            # 7. 检查项目部署
            echo "📦 项目部署检查:"
            APPS_ROOT="/srv/apps"
            PROJECT_DIR="$APPS_ROOT/$PROJECT"
            
            echo "- 应用根目录: $APPS_ROOT"
            echo "- 项目目录: $PROJECT_DIR"
            
            if [ -d "$PROJECT_DIR" ]; then
              echo "✅ 项目目录存在"
              echo "- 目录内容:"
              ls -la "$PROJECT_DIR" | head -10
              echo "- 文件数量: $(find "$PROJECT_DIR" -type f | wc -l)"
            else
              echo "❌ 项目目录不存在"
            fi
            echo ""
            
            # 8. 检查后端服务
            echo "🚀 后端服务检查:"
            echo "- PM2进程:"
            pm2 list 2>/dev/null || echo "PM2未安装或未运行"
            
            echo "- 系统进程:"
            pgrep -f "$PROJECT" || echo "未找到相关进程"
            
            echo "- 端口8090进程:"
            netstat -tlnp | grep :8090 || echo "端口8090未被占用"
            echo ""
            
            # 9. 检查日志文件
            echo "📋 日志文件检查:"
            echo "- Nginx访问日志:"
            tail -n 5 /var/log/nginx/access.log 2>/dev/null || echo "无法读取访问日志"
            
            echo "- Nginx错误日志:"
            tail -n 10 /var/log/nginx/error.log 2>/dev/null || echo "无法读取错误日志"
            
            echo "- 系统日志:"
            journalctl -u nginx --no-pager -n 10 2>/dev/null || echo "无法读取系统日志"
            echo ""
            
            # 10. 测试本地连接
            echo "🔍 本地连接测试:"
            echo "- 测试本地8090端口:"
            curl -f -s http://localhost:8090/health >/dev/null 2>&1 && echo "✅ 本地8090端口响应正常" || echo "❌ 本地8090端口无响应"
            
            echo "- 测试本地8080端口:"
            curl -f -s http://localhost:8080/health >/dev/null 2>&1 && echo "✅ 本地8080端口响应正常" || echo "❌ 本地8080端口无响应"
            echo ""
            
            # 11. 检查防火墙
            echo "🔥 防火墙检查:"
            echo "- 防火墙状态:"
            systemctl status firewalld --no-pager -l 2>/dev/null || echo "firewalld未运行"
            
            echo "- iptables规则:"
            iptables -L -n | grep -E "(80|443|8090)" || echo "未找到相关防火墙规则"
            echo ""
            
            # 12. 检查SSL证书
            echo "🔒 SSL证书检查:"
            echo "- 检查SSL证书:"
            openssl s_client -connect redamancy.com.cn:443 -servername redamancy.com.cn < /dev/null 2>/dev/null | openssl x509 -noout -dates || echo "无法检查SSL证书"
            echo ""
            
            # 13. 测试网站访问
            echo "🌐 网站访问测试:"
            echo "- 测试HTTP访问:"
            curl -I http://redamancy.com.cn/project-dashboard/api/health --connect-timeout 10 --max-time 30 2>/dev/null || echo "HTTP访问失败"
            
            echo "- 测试HTTPS访问:"
            curl -I https://redamancy.com.cn/project-dashboard/api/health --connect-timeout 10 --max-time 30 2>/dev/null || echo "HTTPS访问失败"
            echo ""
            
            echo "=========================================="
            echo "🔍 诊断完成"
            echo "时间: $(date)"
