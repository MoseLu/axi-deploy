name: Upload Files

description: "上传文件到服务器，包含重试机制"

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
        description: "项目名称"
      server_host:
        required: true
        type: string
        description: "服务器地址"
      server_user:
        required: true
        type: string
        description: "服务器用户"
      server_key:
        required: true
        type: string
        description: "服务器密钥"
      server_port:
        required: true
        type: string
        description: "服务器端口"
      artifact_path:
        required: true
        type: string
        description: "构建产物路径"
        default: "./dist"
      run_user:
        required: false
        type: string
        description: "运行用户"
        default: "deploy"
    outputs:
      upload_success:
        description: "上传是否成功"
        value: ${{ jobs.upload.outputs.upload_success }}
      temp_dir:
        description: "服务器临时目录"
        value: ${{ jobs.upload.outputs.temp_dir }}

jobs:
  upload:
    runs-on: ubuntu-latest
    outputs:
      upload_success: ${{ steps.set-outputs.outputs.upload_success }}
      temp_dir: ${{ steps.set-outputs.outputs.temp_dir }}
    
    steps:
      - name: 验证输入参数
        run: |
          echo "🔍 验证输入参数..."
          echo "- 项目: ${{ inputs.project }}"
          echo "- 服务器: ${{ inputs.server_host }}:${{ inputs.server_port }}"
          echo "- 用户: ${{ inputs.server_user }}"
          echo "- 产物路径: ${{ inputs.artifact_path }}"
          
          if [ ! -d "${{ inputs.artifact_path }}" ]; then
            echo "🚨 构建产物路径不存在: ${{ inputs.artifact_path }}"
            exit 1
          fi
          
          echo "✅ 输入参数验证通过"
          
          echo "📁 构建产物目录内容:"
          ls -la "${{ inputs.artifact_path }}/"
          
          echo "📊 文件统计:"
          FILE_COUNT=$(find "${{ inputs.artifact_path }}" -type f | wc -l)
          echo "文件数量: $FILE_COUNT"
          
          if [ "$FILE_COUNT" -eq 0 ]; then
            echo "🚨 构建产物目录为空，终止上传"
            exit 1
          fi
          
          echo "✅ 构建产物验证通过，文件数量: $FILE_COUNT"

      - name: 创建临时目录
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ inputs.server_key }}
          port: ${{ inputs.server_port }}
          script: |
            echo "📁 创建临时目录..."
            
            TEMP_DIR="/tmp/${{ inputs.project }}"
            
            # 清理旧的临时目录
            if [ -d "$TEMP_DIR" ]; then
              echo "🧹 清理旧的临时目录: $TEMP_DIR"
              sudo rm -rf "$TEMP_DIR"
            fi
            
            # 创建新的临时目录
            sudo mkdir -p $TEMP_DIR
            sudo chown ${{ inputs.run_user || 'deploy' }}:${{ inputs.run_user || 'deploy' }} $TEMP_DIR
            
            echo "✅ 临时目录已创建: $TEMP_DIR"
            echo "📁 临时目录权限:"
            ls -la /tmp/ | grep "${{ inputs.project }}" || echo "临时目录尚未创建"

      - name: 上传构建产物
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ inputs.server_key }}
          port: ${{ inputs.server_port }}
          source: "${{ github.workspace }}/${{ inputs.artifact_path }}"
          target: "/tmp/${{ inputs.project }}/"

      - name: 验证上传结果
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ inputs.server_host }}
          username: ${{ inputs.server_user }}
          key: ${{ inputs.server_key }}
          port: ${{ inputs.server_port }}
          script: |
            echo "🔍 验证上传文件..."
            TEMP_DIR="/tmp/${{ inputs.project }}"
            
            if [ ! -d "$TEMP_DIR" ]; then
              echo "🚨 临时目录不存在: $TEMP_DIR"
              echo "📁 /tmp 目录内容:"
              ls -la /tmp/
              exit 1
            fi
            
            echo "✅ 临时目录存在: $TEMP_DIR"
            echo "📁 临时目录内容:"
            ls -la $TEMP_DIR/
            
            # 检查文件数量
            FILE_COUNT=$(find $TEMP_DIR -type f | wc -l)
            echo "📊 文件数量: $FILE_COUNT"
            
            if [ "$FILE_COUNT" -eq 0 ]; then
              echo "🚨 临时目录为空，上传失败"
              echo "🔍 调试信息:"
              echo "临时目录: $TEMP_DIR"
              echo "目录是否存在: $(test -d "$TEMP_DIR" && echo '是' || echo '否')"
              echo "目录权限: $(ls -ld "$TEMP_DIR" 2>/dev/null || echo '无法获取权限')"
              echo "目录内容:"
              ls -la "$TEMP_DIR/" || echo "无法列出目录内容"
              exit 1
            fi
            
            echo "✅ 文件上传验证通过，文件数量: $FILE_COUNT"
            
            # 检查关键文件
            if [ -f "$TEMP_DIR/index.html" ]; then
              echo "✅ 找到 index.html 文件"
            else
              echo "⚠️ 未找到 index.html 文件"
              echo "📁 上传的文件列表:"
              find "$TEMP_DIR" -type f | head -10
            fi

      - name: 设置输出
        id: set-outputs
        run: |
          echo "upload_success=true" >> $GITHUB_OUTPUT
          echo "temp_dir=/tmp/${{ inputs.project }}" >> $GITHUB_OUTPUT
          echo "✅ 输出已设置"
          echo "- upload_success: true"
          echo "- temp_dir: /tmp/${{ inputs.project }}"
