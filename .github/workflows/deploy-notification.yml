name: Deploy Notification

description: "部署通知 - 向部署仪表板发送部署结果通知"

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
        description: "项目名称"
      source_repo:
        required: true
        type: string
        description: "源仓库 (owner/repo)"
      run_id:
        required: true
        type: string
        description: "构建运行ID"
      deploy_type:
        required: true
        type: string
        description: "部署类型 (backend/static)"
        default: "static"
      server_host:
        required: true
        type: string
        description: "服务器地址"
      server_port:
        required: true
        type: string
        description: "服务器端口"
      deploy_success:
        required: true
        type: boolean
        description: "部署是否成功"
      deploy_path:
        required: false
        type: string
        description: "部署路径"
      backup_success:
        required: false
        type: boolean
        description: "备份是否成功"
      backup_path:
        required: false
        type: string
        description: "备份路径"

jobs:
  notification:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: 通知部署仪表板
        if: success()
        run: |
          echo "📢 通知部署仪表板..."
          
          PROJECT="${{ inputs.project }}"
          SOURCE_REPO="${{ inputs.source_repo }}"
          RUN_ID="${{ inputs.run_id }}"
          DEPLOY_TYPE="${{ inputs.deploy_type }}"
          SERVER_HOST="${{ inputs.server_host }}"
          SERVER_PORT="${{ inputs.server_port }}"
          DEPLOY_SUCCESS="${{ inputs.deploy_success }}"
          DEPLOY_PATH="${{ inputs.deploy_path }}"
          BACKUP_SUCCESS="${{ inputs.backup_success }}"
          BACKUP_PATH="${{ inputs.backup_path }}"
          
          # 计算部署时间
          DEPLOY_END_TIME=$(date +%s)
          DEPLOY_DURATION=$((DEPLOY_END_TIME - DEPLOY_START_TIME))
          
          echo "📊 部署统计:"
          echo "- 项目: $PROJECT"
          echo "- 源仓库: $SOURCE_REPO"
          echo "- 运行ID: $RUN_ID"
          echo "- 部署类型: $DEPLOY_TYPE"
          echo "- 服务器: $SERVER_HOST:$SERVER_PORT"
          echo "- 部署成功: $DEPLOY_SUCCESS"
          echo "- 部署路径: $DEPLOY_PATH"
          echo "- 备份成功: $BACKUP_SUCCESS"
          echo "- 备份路径: $BACKUP_PATH"
          echo "- 部署耗时: ${DEPLOY_DURATION}秒"
          
          # 构建通知消息
          if [ "$DEPLOY_SUCCESS" = "true" ]; then
            STATUS="✅ 成功"
            EMOJI="🎉"
            COLOR="#28a745"
          else
            STATUS="❌ 失败"
            EMOJI="💥"
            COLOR="#dc3545"
          fi
          
          # 构建通知数据
          NOTIFICATION_DATA=$(cat <<EOF
          {
            "project": "$PROJECT",
            "source_repo": "$SOURCE_REPO",
            "run_id": "$RUN_ID",
            "deploy_type": "$DEPLOY_TYPE",
            "server_host": "$SERVER_HOST",
            "server_port": "$SERVER_PORT",
            "deploy_success": $DEPLOY_SUCCESS,
            "deploy_path": "$DEPLOY_PATH",
            "backup_success": $BACKUP_SUCCESS,
            "backup_path": "$BACKUP_PATH",
            "deploy_duration": $DEPLOY_DURATION,
            "status": "$STATUS",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "workflow_url": "https://github.com/$SOURCE_REPO/actions/runs/$RUN_ID"
          }
          EOF
          )
          
          echo "📤 发送通知数据:"
          echo "$NOTIFICATION_DATA" | jq .
          
          # 尝试发送到部署仪表板（如果配置了）
          if [ -n "$DEPLOY_DASHBOARD_URL" ]; then
            echo "🌐 发送到部署仪表板: $DEPLOY_DASHBOARD_URL"
            curl -X POST "$DEPLOY_DASHBOARD_URL/api/deployments" \
              -H "Content-Type: application/json" \
              -d "$NOTIFICATION_DATA" \
              --max-time 10 \
              --silent \
              --show-error || echo "⚠️ 发送到部署仪表板失败"
          else
            echo "📋 未配置部署仪表板 URL，跳过通知"
          fi
          
          # 输出部署结果摘要
          echo ""
          echo "$EMOJI 部署结果摘要 $EMOJI"
          echo "================================"
          echo "项目: $PROJECT"
          echo "状态: $STATUS"
          echo "类型: $DEPLOY_TYPE"
          echo "服务器: $SERVER_HOST:$SERVER_PORT"
          echo "路径: $DEPLOY_PATH"
          echo "耗时: ${DEPLOY_DURATION}秒"
          if [ "$BACKUP_SUCCESS" = "true" ]; then
            echo "备份: ✅ 成功 ($BACKUP_PATH)"
          else
            echo "备份: ⏭️ 跳过"
          fi
          echo "================================"

      - name: 通知部署失败
        if: failure()
        run: |
          echo "📢 通知部署失败..."
          
          PROJECT="${{ inputs.project }}"
          SOURCE_REPO="${{ inputs.source_repo }}"
          RUN_ID="${{ inputs.run_id }}"
          DEPLOY_TYPE="${{ inputs.deploy_type }}"
          SERVER_HOST="${{ inputs.server_host }}"
          SERVER_PORT="${{ inputs.server_port }}"
          
          # 计算部署时间
          DEPLOY_END_TIME=$(date +%s)
          DEPLOY_DURATION=$((DEPLOY_END_TIME - DEPLOY_START_TIME))
          
          echo "💥 部署失败统计:"
          echo "- 项目: $PROJECT"
          echo "- 源仓库: $SOURCE_REPO"
          echo "- 运行ID: $RUN_ID"
          echo "- 部署类型: $DEPLOY_TYPE"
          echo "- 服务器: $SERVER_HOST:$SERVER_PORT"
          echo "- 部署耗时: ${DEPLOY_DURATION}秒"
          
          # 构建失败通知数据
          FAILURE_DATA=$(cat <<EOF
          {
            "project": "$PROJECT",
            "source_repo": "$SOURCE_REPO",
            "run_id": "$RUN_ID",
            "deploy_type": "$DEPLOY_TYPE",
            "server_host": "$SERVER_HOST",
            "server_port": "$SERVER_PORT",
            "deploy_success": false,
            "deploy_duration": $DEPLOY_DURATION,
            "status": "❌ 失败",
            "error": "部署过程中发生错误",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "workflow_url": "https://github.com/$SOURCE_REPO/actions/runs/$RUN_ID"
          }
          EOF
          )
          
          echo "📤 发送失败通知数据:"
          echo "$FAILURE_DATA" | jq .
          
          # 尝试发送到部署仪表板（如果配置了）
          if [ -n "$DEPLOY_DASHBOARD_URL" ]; then
            echo "🌐 发送失败通知到部署仪表板: $DEPLOY_DASHBOARD_URL"
            curl -X POST "$DEPLOY_DASHBOARD_URL/api/deployments" \
              -H "Content-Type: application/json" \
              -d "$FAILURE_DATA" \
              --max-time 10 \
              --silent \
              --show-error || echo "⚠️ 发送失败通知到部署仪表板失败"
          else
            echo "📋 未配置部署仪表板 URL，跳过失败通知"
          fi
          
          # 输出失败摘要
          echo ""
          echo "💥 部署失败摘要 💥"
          echo "================================"
          echo "项目: $PROJECT"
          echo "状态: ❌ 失败"
          echo "类型: $DEPLOY_TYPE"
          echo "服务器: $SERVER_HOST:$SERVER_PORT"
          echo "耗时: ${DEPLOY_DURATION}秒"
          echo "工作流: https://github.com/$SOURCE_REPO/actions/runs/$RUN_ID"
          echo "================================"
