name: Test Start Service Retry Mechanism

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: '测试类型'
        required: true
        default: 'success'
        type: choice
        options:
          - success
          - directory_not_found
          - ssh_timeout
          - service_failure

jobs:
  test-start-service-retry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: 测试启动服务重试机制
        uses: ./.github/workflows/retry-center.yml
        with:
          step_name: "测试启动服务"
          command: |
            echo "🧪 测试启动服务重试机制..."
            echo "测试类型: ${{ github.event.inputs.test_type }}"
            
            # 模拟不同的测试场景
            if [ "${{ github.event.inputs.test_type }}" = "directory_not_found" ]; then
              echo "📁 模拟目录不存在场景..."
              cd /nonexistent/directory
              echo "❌ 目录不存在测试完成"
            elif [ "${{ github.event.inputs.test_type }}" = "ssh_timeout" ]; then
              echo "⏰ 模拟SSH超时场景..."
              # 尝试连接一个不存在的服务器
              ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no user@invalid-host.com "echo test" || true
              echo "❌ SSH超时测试完成"
            elif [ "${{ github.event.inputs.test_type }}" = "service_failure" ]; then
              echo "🔌 模拟服务启动失败场景..."
              # 尝试执行一个不存在的命令
              nonexistent_command || true
              echo "❌ 服务启动失败测试完成"
            else
              echo "✅ 模拟成功场景..."
              echo "启动服务测试成功"
            fi
          max_retries: 3
          retry_delay: 5
          timeout_minutes: 10
          retry_strategy: "exponential"
          continue_on_error: true
          notify_on_failure: false
          step_type: "network"
          
      - name: 显示测试结果
        run: |
          echo "🧪 启动服务重试机制测试完成"
          echo "测试类型: ${{ github.event.inputs.test_type }}"
          echo "成功状态: ${{ needs.test-start-service-retry.outputs.success }}"
          echo "重试次数: ${{ needs.test-start-service-retry.outputs.attempts }}"
          echo "执行时间: ${{ needs.test-start-service-retry.outputs.execution_time }}秒"
          if [ "${{ needs.test-start-service-retry.outputs.success }}" = "false" ]; then
            echo "错误信息: ${{ needs.test-start-service-retry.outputs.error_message }}"
          fi
