name: Deploy Project (New)

description: "项目部署 - 简化的项目部署工作流，调用拆分后的各个功能模块"

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
        description: "项目名称"
      source_repo:
        required: true
        type: string
        description: "源仓库 (owner/repo)"
      run_id:
        required: true
        type: string
        description: "构建运行ID"
      deploy_type:
        required: true
        type: string
        description: "部署类型 (backend/static)"
        default: "static"
      server_host:
        required: true
        type: string
        description: "服务器地址"
      server_user:
        required: true
        type: string
        description: "服务器用户"
      server_key:
        required: true
        type: string
        description: "服务器密钥"
      server_port:
        required: true
        type: string
        description: "服务器端口"
      deploy_center_pat:
        required: false
        type: string
        description: "GitHub Token用于下载构建产物（可选，默认使用GITHUB_TOKEN）"
      apps_root:
        required: false
        type: string
        description: "应用目录路径"
        default: "/srv/apps"
      static_root:
        required: false
        type: string
        description: "静态文件目录路径"
        default: "/srv/static"
      backup_root:
        required: false
        type: string
        description: "备份根目录"
        default: "/srv/backups"
      mysql_config:
        required: false
        type: string
        description: "MySQL 配置（base64 编码的 JSON）"
      run_user:
        required: false
        type: string
        description: "运行用户"
        default: "deploy"

    outputs:
      deploy_success:
        description: "部署是否成功"
        value: ${{ jobs.deploy.outputs.deploy_success }}
      deploy_path:
        description: "部署路径"
        value: ${{ jobs.deploy.outputs.deploy_path }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      actions: read
      packages: read
    outputs:
      deploy_success: ${{ steps.set-outputs.outputs.deploy_success }}
      deploy_path: ${{ steps.set-outputs.outputs.deploy_path }}
    
    steps:
      - name: 验证输入参数
        run: |
          echo "🔍 验证输入参数..."
          echo "- 项目: ${{ inputs.project }}"
          echo "- 源仓库: ${{ inputs.source_repo }}"
          echo "- 运行ID: ${{ inputs.run_id }}"
          echo "- 部署类型: ${{ inputs.deploy_type }}"
          echo "- 服务器: ${{ inputs.server_host }}:${{ inputs.server_port }}"
          
          # 记录部署开始时间
          echo "DEPLOY_START_TIME=$(date +%s)" >> $GITHUB_ENV
          
          echo "✅ 输入参数验证通过"

      # 步骤1: 下载构建产物
      - name: 下载构建产物
        uses: ./.github/workflows/download-artifact.yml@master
        with:
          project: ${{ inputs.project }}
          source_repo: ${{ inputs.source_repo }}
          run_id: ${{ inputs.run_id }}
          deploy_center_pat: ${{ inputs.deploy_center_pat }}

      # 步骤2: 部署到服务器
      - name: 部署到服务器
        id: deploy-to-server
        uses: ./.github/workflows/deploy-to-server.yml@master
        with:
          project: ${{ inputs.project }}
          deploy_type: ${{ inputs.deploy_type }}
          server_host: ${{ inputs.server_host }}
          server_user: ${{ inputs.server_user }}
          server_key: ${{ inputs.server_key }}
          server_port: ${{ inputs.server_port }}
          apps_root: ${{ inputs.apps_root }}
          static_root: ${{ inputs.static_root }}
          backup_root: ${{ inputs.backup_root }}
          run_user: ${{ inputs.run_user }}

      # 步骤3: MySQL 数据库备份（仅后端项目）
      - name: MySQL 数据库备份
        id: mysql-backup
        if: inputs.deploy_type == 'backend' && inputs.mysql_config != ''
        uses: ./.github/workflows/mysql-backup.yml@master
        with:
          project: ${{ inputs.project }}
          server_host: ${{ inputs.server_host }}
          server_user: ${{ inputs.server_user }}
          server_key: ${{ inputs.server_key }}
          server_port: ${{ inputs.server_port }}
          apps_root: ${{ inputs.apps_root }}
          backup_root: ${{ inputs.backup_root }}
          mysql_config: ${{ inputs.mysql_config }}

      # 步骤4: 部署通知
      - name: 部署通知
        uses: ./.github/workflows/deploy-notification.yml@master
        with:
          project: ${{ inputs.project }}
          source_repo: ${{ inputs.source_repo }}
          run_id: ${{ inputs.run_id }}
          deploy_type: ${{ inputs.deploy_type }}
          server_host: ${{ inputs.server_host }}
          server_port: ${{ inputs.server_port }}
          deploy_success: ${{ steps.deploy-to-server.outputs.deploy_success }}
          deploy_path: ${{ steps.deploy-to-server.outputs.deploy_path }}
          backup_success: ${{ steps.mysql-backup.outputs.backup_success || 'false' }}
          backup_path: ${{ steps.mysql-backup.outputs.backup_path || '' }}

      - name: 设置输出
        id: set-outputs
        run: |
          echo "deploy_success=${{ steps.deploy-to-server.outputs.deploy_success }}" >> $GITHUB_OUTPUT
          echo "deploy_path=${{ steps.deploy-to-server.outputs.deploy_path }}" >> $GITHUB_OUTPUT
          echo "✅ 部署完成"
          echo "- deploy_success: ${{ steps.deploy-to-server.outputs.deploy_success }}"
          echo "- deploy_path: ${{ steps.deploy-to-server.outputs.deploy_path }}"
